use super::super::LightWallet;

/// as opposed to [LegacyWalletCase], which enumerates test cases compiled from the history of zingo wallt tests, this ExampleWalletNetworkCase is meant to fully organize the set of test cases.
#[non_exhaustive]
#[derive(Clone)]
pub enum ExampleWalletNetwork {
    /// /
    Regtest(ExampleRegtestWalletSeed),
    /// /
    Testnet(ExampleTestnetWalletSeed),
    /// /
    Mainnet(ExampleMainnetWalletSeed),
}

/// /
#[non_exhaustive]
#[derive(Clone)]
pub enum ExampleMainnetWalletSeed {
    /// this is a mainnet wallet originally called missing_data_test
    VTFCORFBCBPCTCFUPMEGMWBP(ExampleVTFCORFBCBPCTCFUPMEGMWBPWalletVersion),
}
/// /
#[non_exhaustive]
#[derive(Clone)]
pub enum ExampleVTFCORFBCBPCTCFUPMEGMWBPWalletVersion {
    /// wallet was last saved in this serialization version
    V28,
}
/// /
#[non_exhaustive]
#[derive(Clone)]
pub enum ExampleTestnetWalletSeed {
    /// This is a testnet seed, generated by fluidvanadium at the beginning of owls (this example wallet enumeration)
    MSKMGDBHOTBPETCJWCSPGOPP(ExampleMSKMGDBHOTBPETCJWCSPGOPPWalletVersion),
    /// this testnet wallet was generated at the beginning of serialization v28 by fluidvanadium
    CBBHRWIILGBRABABSSHSMTPR(ExampleCBBHRWIILGBRABABSSHSMTPRWalletVersion),
}
/// /
#[non_exhaustive]
#[derive(Clone)]
pub enum ExampleMSKMGDBHOTBPETCJWCSPGOPPWalletVersion {
    /// wallet was last saved by the code in this commit
    Gab72a38b,
}
/// /
#[non_exhaustive]
#[derive(Clone)]
pub enum ExampleCBBHRWIILGBRABABSSHSMTPRWalletVersion {
    /// wallet was last saved in this serialization version
    V26,
    V27,
    V28,
}
/// /
#[non_exhaustive]
#[derive(Clone)]
pub enum ExampleRegtestWalletSeed {
    /// this is a regtest wallet originally called old_wallet_reorg_test_wallet
    HMVASMUVWMSSVICHCARBPOCT(ExampleHMVASMUVWMSSVICHCARBPOCTWalletVersion),
}
/// /
#[non_exhaustive]
#[derive(Clone)]
pub enum ExampleHMVASMUVWMSSVICHCARBPOCTWalletVersion {
    /// wallet was last saved in this serialization version
    V27,
}

/// loads test wallets
impl LightWallet {
    /// loads any one of the test wallets included in the examples
    pub async fn load_example_wallet(case: ExampleWalletNetwork) -> Self {
        match case {
            ExampleWalletNetwork::Regtest(ExampleRegtestWalletSeed::HMVASMUVWMSSVICHCARBPOCT(
                ExampleHMVASMUVWMSSVICHCARBPOCTWalletVersion::V27,
            )) => {
                LightWallet::unsafe_from_buffer_regtest(include_bytes!(
                    "examples/regtest/hmvasmuvwmssvichcarbpoct/v27/zingo-wallet.dat"
                ))
                .await
            }
            ExampleWalletNetwork::Testnet(ExampleTestnetWalletSeed::MSKMGDBHOTBPETCJWCSPGOPP(
                ExampleMSKMGDBHOTBPETCJWCSPGOPPWalletVersion::Gab72a38b,
            )) => {
                LightWallet::unsafe_from_buffer_testnet(include_bytes!(
                    "examples/testnet/mskmgdbhotbpetcjwcspgopp/Gab72a38b/zingo-wallet.dat"
                ))
                .await
            }
            ExampleWalletNetwork::Testnet(ExampleTestnetWalletSeed::CBBHRWIILGBRABABSSHSMTPR(
                ExampleCBBHRWIILGBRABABSSHSMTPRWalletVersion::V26,
            )) => {
                LightWallet::unsafe_from_buffer_testnet(include_bytes!(
                    "examples/testnet/cbbhrwiilgbrababsshsmtpr/v26/zingo-wallet.dat"
                ))
                .await
            }
            ExampleWalletNetwork::Testnet(ExampleTestnetWalletSeed::CBBHRWIILGBRABABSSHSMTPR(
                ExampleCBBHRWIILGBRABABSSHSMTPRWalletVersion::V27,
            )) => {
                LightWallet::unsafe_from_buffer_testnet(include_bytes!(
                    "examples/testnet/cbbhrwiilgbrababsshsmtpr/v27/zingo-wallet.dat"
                ))
                .await
            }
            ExampleWalletNetwork::Testnet(ExampleTestnetWalletSeed::CBBHRWIILGBRABABSSHSMTPR(
                ExampleCBBHRWIILGBRABABSSHSMTPRWalletVersion::V28,
            )) => {
                LightWallet::unsafe_from_buffer_testnet(include_bytes!(
                    "examples/testnet/cbbhrwiilgbrababsshsmtpr/v28/zingo-wallet.dat"
                ))
                .await
            }
            ExampleWalletNetwork::Mainnet(ExampleMainnetWalletSeed::VTFCORFBCBPCTCFUPMEGMWBP(
                ExampleVTFCORFBCBPCTCFUPMEGMWBPWalletVersion::V28,
            )) => {
                LightWallet::unsafe_from_buffer_mainnet(include_bytes!(
                    "examples/mainnet/vtfcorfbcbpctcfupmegmwbp/v28/zingo-wallet.dat"
                ))
                .await
            }
        }
    }
}

/// i do not know the difference between these wallets but i will find out soon
/// what can these files do?
#[non_exhaustive]
#[derive(Clone)]
pub enum LegacyWalletCaseZingoV26 {
    /// regtest sap only wallet
    RegtestSapOnly,
}
/// an enumeration of cases to test
#[non_exhaustive]
#[derive(Clone)]
pub enum LegacyWalletCase {
    /// at this version, legacy testing began
    ZingoV26(LegacyWalletCaseZingoV26),
    /// ?
    ZingoV28,
}

/// loads test wallets
impl LightWallet {
    /// loads any one of the test wallets included in the examples
    pub async fn load_example_wallet_legacy(case: LegacyWalletCase) -> Self {
        match case {
            LegacyWalletCase::ZingoV26(LegacyWalletCaseZingoV26::RegtestSapOnly) => {
                LightWallet::unsafe_from_buffer_regtest(include_bytes!(
                    "examples/v26/202302_release/regtest/sap_only/zingo-wallet.dat"
                ))
                .await
            }
            LegacyWalletCase::ZingoV28 => {
                unimplemented!()
            }
        }
    }

    /// each wallet file has a saved balance
    pub fn example_expected_balance(case: LegacyWalletCase) -> u64 {
        match case {
            // LegacyWalletCase::ZingoV26(LegacyWalletCaseZingoV26::One) => 0,
            // LegacyWalletCase::ZingoV26(LegacyWalletCaseZingoV26::Two) => 10177826,
            LegacyWalletCase::ZingoV26(LegacyWalletCaseZingoV26::RegtestSapOnly) => todo!(),
            LegacyWalletCase::ZingoV28 => 10342837,
        }
    }

    /// each wallet file has a saved balance
    pub fn example_expected_num_addresses(case: LegacyWalletCase) -> usize {
        match case {
            // LegacyWalletCase::ZingoV26(LegacyWalletCaseZingoV26::One) => 3,
            // LegacyWalletCase::ZingoV26(LegacyWalletCaseZingoV26::Two) => 1,
            LegacyWalletCase::ZingoV26(LegacyWalletCaseZingoV26::RegtestSapOnly) => todo!(),
            LegacyWalletCase::ZingoV28 => 3,
        }
    }
}
